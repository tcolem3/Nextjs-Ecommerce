"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/(root)/payment-method/page",{

/***/ "(app-pages-browser)/./lib/utils.ts":
/*!**********************!*\
  !*** ./lib/utils.ts ***!
  \**********************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   cn: () => (/* binding */ cn),\n/* harmony export */   convertToPlainObject: () => (/* binding */ convertToPlainObject),\n/* harmony export */   formUrlQuery: () => (/* binding */ formUrlQuery),\n/* harmony export */   formatCurrency: () => (/* binding */ formatCurrency),\n/* harmony export */   formatDateTime: () => (/* binding */ formatDateTime),\n/* harmony export */   formatError: () => (/* binding */ formatError),\n/* harmony export */   formatId: () => (/* binding */ formatId),\n/* harmony export */   formatNumber: () => (/* binding */ formatNumber),\n/* harmony export */   formatNumberWithDecimal: () => (/* binding */ formatNumberWithDecimal),\n/* harmony export */   round2: () => (/* binding */ round2)\n/* harmony export */ });\n/* harmony import */ var clsx__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! clsx */ \"(app-pages-browser)/./node_modules/clsx/dist/clsx.mjs\");\n/* harmony import */ var tailwind_merge__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! tailwind-merge */ \"(app-pages-browser)/./node_modules/tailwind-merge/dist/bundle-mjs.mjs\");\n/* harmony import */ var query_string__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! query-string */ \"(app-pages-browser)/./node_modules/query-string/index.js\");\n\n\n\nfunction cn() {\n    for(var _len = arguments.length, inputs = new Array(_len), _key = 0; _key < _len; _key++){\n        inputs[_key] = arguments[_key];\n    }\n    return (0,tailwind_merge__WEBPACK_IMPORTED_MODULE_1__.twMerge)((0,clsx__WEBPACK_IMPORTED_MODULE_0__.clsx)(inputs));\n}\n// Convert prisma object into a regular js object\nfunction convertToPlainObject(value) {\n    return JSON.parse(JSON.stringify(value));\n}\n//Format number with decimal\nfunction formatNumberWithDecimal(num) {\n    const [int, decimal] = num.toString().split('.');\n    return decimal ? \"\".concat(int, \".\").concat(decimal.padEnd(2, '0')) : \"\".concat(int, \".00\");\n}\n//FOrmat Errors\n// export async function formatError(error: any) {\n//eslint-disable-next-line @typescript-eslint/no-explicit-any\nfunction formatError(error) {\n    if (error.name === 'ZodError') {\n        //Handle Zode error\n        const fieldErrors = Object.keys(error.errors).map((field)=>error.errors[field].message);\n        return fieldErrors.join('.');\n    } else if (error.name === 'PrismaClientKnownRequestError' && error.code === 'P2002') {\n        var _error_meta;\n        // Handle Prisma error\n        // const field = error.meta?.target ? error.meta?.target[0] : 'Field';\n        const field = ((_error_meta = error.meta) === null || _error_meta === void 0 ? void 0 : _error_meta.target) ? error.meta.target[0] : 'Field';\n        return \"\".concat(field.charAt(0).toUpperCase() + field.slice(1), \" already exist\");\n    } else {\n        //Handle other errors\n        return typeof error.message === 'string' ? error.message : JSON.stringify(error.message);\n    }\n}\n//Round number to two decimal places\nfunction round2(value) {\n    if (typeof value === 'number') {\n        return Math.round((value + Number.EPSILON) * 100) / 100;\n    } else if (typeof value === 'string') {\n        return Math.round((Number(value) + Number.EPSILON) * 100) / 100;\n    } else {\n        throw new Error('value is not a number or string');\n    }\n}\nconst CURRENCY_FORMATTER = new Intl.NumberFormat('en-US', {\n    currency: 'USD',\n    style: 'currency',\n    minimumFractionDigits: 2\n});\n//Format currency using the formatter above\nfunction formatCurrency(amount) {\n    if (typeof amount === 'number') {\n        return CURRENCY_FORMATTER.format(amount);\n    } else if (typeof amount === 'string') {\n        return CURRENCY_FORMATTER.format(Number(amount));\n    } else return 'NaN';\n}\n//shorten UUID\nfunction formatId(id) {\n    return \"..\".concat(id.substring(id.length - 6));\n// console.log(formatID)\n}\n//Format date and time\nconst formatDateTime = (dateString)=>{\n    const dateTimeOptions = {\n        month: 'short',\n        year: 'numeric',\n        day: 'numeric',\n        hour: 'numeric',\n        minute: 'numeric',\n        hour12: true\n    };\n    const dateOptions = {\n        weekday: 'short',\n        month: 'short',\n        year: 'numeric',\n        day: 'numeric'\n    };\n    const timeOptions = {\n        hour: 'numeric',\n        minute: 'numeric',\n        hour12: true\n    };\n    const formattedDateTime = new Date(dateString).toLocaleString('en-US', dateTimeOptions);\n    const formattedDate = new Date(dateString).toLocaleString('en-US', dateOptions);\n    const formattedTime = new Date(dateString).toLocaleString('en-US', timeOptions);\n    return {\n        dateTime: formattedDateTime,\n        dateOnly: formattedDate,\n        timeOnly: formattedTime\n    };\n};\n//Form the pagination links\nfunction formUrlQuery(param) {\n    let { params, key, value } = param;\n    const query = query_string__WEBPACK_IMPORTED_MODULE_2__[\"default\"].parse(params);\n    query[key] = value;\n    return query_string__WEBPACK_IMPORTED_MODULE_2__[\"default\"].stringifyUrl({\n        url: window.location.pathname,\n        query\n    }, {\n        skipNull: true\n    });\n}\n//Format Number\nconst NUMBER_FORMATTER = new Intl.NumberFormat('en-US');\nfunction formatNumber(number) {\n    return NUMBER_FORMATTER.format(number);\n}\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./lib/utils.ts\n"));

/***/ })

});